<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!-- 指定spring扫描路径，可以选择性过滤，默认是路径下全扫描-->
    <context:annotation-config />
    <context:component-scan base-package="ssh.*"/>

    <!-- 引入属性文件 -->
    <context:property-placeholder location="classpath:jdbc.properties"/>
    <context:property-placeholder location="classpath:log4j.properties"/>
    <!-- 配置C3P0连接池 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <!-- 数据库连接相关信息 -->
        <property name="jdbcUrl" value="${jdbc.url}"/>
        <property name="driverClass" value="${jdbc.driverClass}"/>
        <property name="user" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>

    <!-- 配置Hibernate的SessionFactory -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <!-- 注入连接池 -->
        <property name="dataSource" ref="dataSource"/>
        <!-- 配置Hibernate属性 -->
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.show_sql">true</prop><!-- 是否展示SQL -->
                <prop key="hibernate.hbm2ddl.auto">update</prop><!-- 是否自动创建表结构 -->
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5InnoDBDialect</prop>
            </props>
        </property>
        <!-- 扫描并加载注解过的实体类 -->
        <property name="packagesToScan" value="ssh.*.model"/>
    </bean>
    <!-- service注入配置 -->
    <bean id="TrendsAction" class="ssh.product.action.trends.TrendsAction" scope="prototype">
        <property name="trendsEntityService" ref="trendsEntityService"/>
    </bean>
    <bean id="CollectAction" class="ssh.product.action.trends.CollectAction" scope="prototype">
        <property name="collectEntityService" ref="collectEntityService"/>
    </bean>
    <!--<bean id="loginAction" class="ssh.product.action.LoginAction" scope="prototype">-->
        <!--<property name="userService" ref="userService"/>-->
    <!--</bean>-->
    <!-- dao注入配置 -->
    <bean id="trendsEntityService" class="ssh.product.service.impl.TrendsEntityServiceImpl" >
        <property name="trendsEntityDao" ref="rendsEntityDao"/>
    </bean>
    <bean id="collectEntityService" class="ssh.product.service.impl.CollectEntityServiceImpl" >
        <property name="collectEntityDao" ref="collectEntityDao"/>
    </bean>
    <!--<bean id="userService" class="ssh.product.service.impl.UserServiceImpl" >-->
        <!--<property name="userDao" ref="userDao"/>-->
    <!--</bean>-->

    <!-- session注入配置 -->
    <bean id="rendsEntityDao" class="ssh.product.dao.impl.TrendsEntityDaoImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    <bean id="collectEntityDao" class="ssh.product.dao.impl.CollectEntityDaoImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    <!--<bean id="userDao" class="ssh.product.dao.impl.UserDaoImpl">-->
        <!--<property name="sessionFactory" ref="sessionFactory"/>-->
    <!--</bean>-->
    <!--<bean id="LoginAction" class="ssh.product.action.LoginAction" scope="prototype">-->
        <!--<property name="userService" ref="UserService"/>-->
    <!--</bean>-->
    <!--&lt;!&ndash;配置Service层的类&ndash;&gt;-->
    <!--<bean id="UserService" class="ssh.product.service.impl.UserServiceImpl">-->
        <!--<property name="userDao" ref="UserDao"/>-->
    <!--</bean>-->
    <!--&lt;!&ndash;配置Dao层的类&ndash;&gt;-->
    <!--<bean id="UserDao" class="ssh.product.dao.impl.UserDaoImpl">-->
        <!--<property name="sessionFactory" ref="sessionFactory"/>-->
    <!--</bean>-->

    <!-- 配置事务管理器 -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <!-- 注入SessionFactory -->
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    <tx:annotation-driven transaction-manager="transactionManager"/>
    <!-- 配置事务增强 -->
    <!--<tx:advice id="txAdvice" transaction-manager="transactionManager">-->
        <!--<tx:attributes>-->
            <!--&lt;!&ndash; 配置需要进行事务管理的方法，和事务传播行为 &ndash;&gt;-->
            <!--<tx:method name="save*"   propagation="REQUIRED"/>-->
            <!--<tx:method name="update*" propagation="REQUIRED"/>-->
            <!--<tx:method name="delete*" propagation="REQUIRED"/>-->
        <!--</tx:attributes>-->
    <!--</tx:advice>-->
    <!-- 配置切面 -->
    <!--<aop:config>-->
        <!--&lt;!&ndash; 配置切入点-->
            <!--* ssh.service.*+.*(..)-->
                <!--*：表示方法的作用域，*表示所有-->
                <!--ssh.service.*：表示org.ssh.service下的任何包-->
                <!--ssh.service.*+：表示org.ssh.service下的任何包及其子包-->
                <!--*(..)：*表示任何方法，(..)表示方法的任何参数-->
         <!--&ndash;&gt;-->
        <!--<aop:pointcut id="pointcut" expression="execution(* ssh.*.service.*+.*(..))"/>-->
        <!--&lt;!&ndash; 适配切入点和事务增强 &ndash;&gt;-->
        <!--<aop:advisor advice-ref="txAdvice" pointcut-ref="pointcut"/>-->
    <!--</aop:config>-->

</beans>